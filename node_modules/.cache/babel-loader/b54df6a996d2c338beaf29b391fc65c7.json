{"ast":null,"code":"import { loginFailure, loginStart, loginSuccess } from \"./userRedux\";\nimport { publicRequest } from \"../requestMethods\";\nexport const login = async (dispatch, user) => {\n  dispatch(loginStart());\n\n  try {\n    const res = await publicRequest.post(\"/auth/login\", user);\n    dispatch(loginSuccess(res.data));\n    console.log(res.data);\n  } catch (err) {\n    dispatch(loginFailure());\n  }\n};\nexport const register = async (dispatch, user) => {\n  dispatch(loginStart());\n\n  try {\n    const res = await publicRequest.post(\"/auth/register\", user);\n    dispatch(loginSuccess(res.data));\n  } catch (err) {\n    dispatch(loginFailure());\n  }\n};","map":{"version":3,"sources":["/Users/bilabthapa/Downloads/youtube/client/src/redux/apiCalls.js"],"names":["loginFailure","loginStart","loginSuccess","publicRequest","login","dispatch","user","res","post","data","console","log","err","register"],"mappings":"AAAA,SAASA,YAAT,EAAuBC,UAAvB,EAAmCC,YAAnC,QAAuD,aAAvD;AACA,SAASC,aAAT,QAA8B,mBAA9B;AAGA,OAAO,MAAMC,KAAK,GAAG,OAAOC,QAAP,EAAiBC,IAAjB,KAA0B;AAC7CD,EAAAA,QAAQ,CAACJ,UAAU,EAAX,CAAR;;AACA,MAAI;AACF,UAAMM,GAAG,GAAG,MAAMJ,aAAa,CAACK,IAAd,CAAmB,aAAnB,EAAkCF,IAAlC,CAAlB;AACAD,IAAAA,QAAQ,CAACH,YAAY,CAACK,GAAG,CAACE,IAAL,CAAb,CAAR;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,GAAG,CAACE,IAAhB;AAID,GAPD,CAOE,OAAOG,GAAP,EAAY;AACZP,IAAAA,QAAQ,CAACL,YAAY,EAAb,CAAR;AAED;AACF,CAbM;AAcP,OAAO,MAAMa,QAAQ,GAAG,OAAOR,QAAP,EAAiBC,IAAjB,KAA0B;AAChDD,EAAAA,QAAQ,CAACJ,UAAU,EAAX,CAAR;;AACA,MAAI;AACF,UAAMM,GAAG,GAAG,MAAMJ,aAAa,CAACK,IAAd,CAAmB,gBAAnB,EAAqCF,IAArC,CAAlB;AACAD,IAAAA,QAAQ,CAACH,YAAY,CAACK,GAAG,CAACE,IAAL,CAAb,CAAR;AAED,GAJD,CAIE,OAAOG,GAAP,EAAY;AACZP,IAAAA,QAAQ,CAACL,YAAY,EAAb,CAAR;AAED;AACF,CAVM","sourcesContent":["import { loginFailure, loginStart, loginSuccess } from \"./userRedux\";\nimport { publicRequest } from \"../requestMethods\";\n\n\nexport const login = async (dispatch, user) => {\n  dispatch(loginStart());\n  try {\n    const res = await publicRequest.post(\"/auth/login\", user);\n    dispatch(loginSuccess(res.data));\n    console.log(res.data);\n    \n\n\n  } catch (err) {\n    dispatch(loginFailure());\n   \n  }\n};\nexport const register = async (dispatch, user) => {\n  dispatch(loginStart());\n  try {\n    const res = await publicRequest.post(\"/auth/register\", user);\n    dispatch(loginSuccess(res.data));\n    \n  } catch (err) {\n    dispatch(loginFailure());\n   \n  }\n};\n"]},"metadata":{},"sourceType":"module"}